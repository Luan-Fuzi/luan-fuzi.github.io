<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>深度学习小工具</title><url>/post/randomtech/trainingtools/trainingtools/</url><categories><category>深度学习</category></categories><tags><tag>工具</tag></tags><content type="html"> 整理一些深度学习过程中用到的小工具。
GPU状态监控
N卡自带的监控可以使用nvidia-smi指令调用，好处是驱动自带，坏处是&amp;hellip;其实这监控没给多少有用信息。
使用nvtop获得更加炫酷、更加详细的监控指标。
哈哈2
哈哈哈3</content></entry><entry><title>Github仓库同步</title><url>/post/randomtech/repositorysync/sync/</url><categories><category><no value=/></categories><tags><tag><no value=/><tag><no value=/></tags><content type="html"> 有时会想将Github的仓库同步到其他的git仓库，比如Github Pages或者Gittee。可以通过Github Action再加上亿点点配置达成效果。
待续</content></entry><entry><title>Golang学习笔记</title><url>/post/language/golangbasic/golangbasic/</url><categories><category><no value=/></categories><tags><tag><no value=/><tag><no value=/></tags><content type="html"> Golang基础学习笔记
灵机一动打算学一下Golang，于是乎简单记录一下学习过程。 本文主要记录（我认为的）Golang语言和其它语言，如C/C++，Java有所差异的部分。
参考链接：
《Go 入门指南》 | Go 技术论坛 (learnku.com)
背景
起源
Golang是起源于2007年的谷歌某小组的项目，是一种静态、强类型、编译语言，拥有接近C++的编译后运行速度，主要特长在于内存安全、原生支持高并发、高效内存回收，拥有比较奇怪的自成一派的比较简单好学的语法（不仅和较老的C和Java比，而且和相对比较现代的Kotlin和C#比，我也觉得怪怪的）。
土拨鼠
我很喜欢Golang的图标，足够弱智，有一种脑干缺失的美。也很可爱。
基础语法
面向对象</content></entry><entry><title>Latex学习记录</title><url>/post/randomtech/latex/latex/</url><categories><category>杂项技术</category></categories><tags><tag>Latex</tag><tag>论文</tag></tags><content type="html"> 记录一下Latex学习过程，从安装到入土。
安装Tex Live，找编辑器，学语法一条龙。
LaTex是一种排版技术，通过特定的指令可以控制文档内容（如图片、文本等）的位置、大小和样式。
以下是基础使用流程。
操作系统：Windows 10 22H2
CPU: Intel i7-11800H
安装Tex Live
使用LaTeX进行写作的第一步是安装LaTex的编译环境。为新手考虑，在硬盘空间充足的硬盘内优先考虑安装功能较全的Tex Live.
简陋的官网
国内比较方便的下载途径——清华镜像站：
Index of /CTAN/systems/texlive/Images/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror
清华镜像站
下载镜像后，打开镜像内部index.html，可以查看官方提供的简易安装教程；也可以观看类似教程视频
TeX Live 2023安装
Tex Live是一个集成功能较多，镜像体积较大的All In One，安装较为耗时（i7-11800H安装全程45分钟左右，仅作参考），嫌时间长的可以选择按装更简单、更小的MiKTeX：
Getting MiKTeX
安装完记得在Path路径下添加环境变量。
编辑器
安装完成后，Tex Live会自带一个编辑器（或者叫IDE？）TexWorks，可以方便地将Latex文档编译成PDF。
因为LaTeX到PDF是一种编译过程，所以编辑器并不局限于TexWorks或某种编辑器。可选的编辑器/编译环境还有TexStudio|VS Code|Sublime Text等。
作为一个万年VS Code用户，我抛弃了便捷好用的TexWorks，安装了更人性化、更强大的Tex Studio也没久用，最终选择了VS Code + LaTeX插件。需要注意的是，VS Code安装插件后虽然能用，但并不是最舒服的一个使用环境，需要进入Settings打开JSON文件进行某些配置。我本人也对研究配置环境兴趣不大，所以这里贴一个我用的配置文件：
Visual Studio Code (vscode)配置LaTeX - 知乎 (zhihu.com)
开写！
LaTeX作为一种[能且仅能在写文章时用上]的工具，不必像编程语言那样从零开始啃语法，更不需要搞懂LaTeX的模板是怎么做的。作为初阶使用 …</content></entry><entry><title>Hugo测试</title><url>/post/others/test/</url><categories><category>碎碎念</category></categories><tags><tag>深夜发癫</tag></tags><content type="html"> 尝试使用hugo进行一个个人主页的维护。
早就想做个人主页了，但是以前要么是技术力不够，要么是不好看。找了半天终于在hugo里翻到了原先看hexo时候特别喜欢的一款主题
NexT Theme (github.com)
，简洁，不花里胡哨，而且有别人预先配置得还不错的仓库
hugo-next/hugo-theme-next-starter: Starter for Hugo NexT theme. (github.com)
，配了一段时间，好多没用上的东西，慢慢删吧。
啥也不动，直接用markdown写东西，舒服。</content></entry><entry><title>关于我</title><url>/aboutme/</url><categories><category>碎碎念</category></categories><tags><tag>深夜发癫</tag></tags><content type="html"> 关于我：
专业 ：计算机科学与技术 Computer Science（我被XX大学害惨了.jpg）
语言喜好：Java，Python，Go （我喜欢≠我学会），我要成为炼丹高手！.jpg。
音乐：会钢琴但不咋练，买了FL Studio但不咋用。有生之年。
游戏：很难集中精力通关3A了，steam库里小游戏想起哪个玩哪个。
Minecraft：曾经的白月光，玩的频率赶不上更新了。有生之年。
——————分割线——————
最重要的事就是认可自己正在做的事。希望以后也可以做到这一点。</content></entry></search>